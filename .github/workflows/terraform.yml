
name: 'Terraform CI/CD Pipeline'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    #if= github.ref == 'refs/heads/main' && github.event_name == 'push'
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform  # Directory terraform file

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "~> 1.6"

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      id: format
      run: terraform fmt

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init


    # This step will run on every pull request
    - name: 'Terraform Plan on Pull Request'
      if: github.event_name == 'pull_request'
      run: terraform plan -out "tfplan"

    # Upload the plan file as an artifact
    - name: Upload Terraform Plan
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: ./terraform/tfplan

    # Push to main, Download the plan and apply it. (OLD configuration )
    #- name: Download Terraform Plan
    #  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #  uses: actions/download-artifact@v4
    #  with:
    #    name: tfplan
    #    path: ./terraform    

    # This step will run on the main Branch
    # On push to "main", build or change infrastructure according to Terraform configuration files
    # Note: It is recommended to set up a required "strict" status check in your repository for 
    #"Terraform Cloud". See the documentation on "strict" required status checks 
    #for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: 'Terraform Apply on Push to Main'
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        terraform plan -out "tfplan"
        terraform apply -auto-approve "tfplan"

    #OLD Configuration
    # Generates an execution plan for Terraform
    
    #- name: Terraform Plan
    #  id: plan
    #  run: terraform plan -out "tfplan"
    #- name: Terraform Apply
    #  id: apply
    #  run: terraform apply -auto-approve "tfplan"
      
